// IMPORTANT: DO NOT EDIT THIS FILE MANUALLY!
// This file is automatically generated with `cargo xtask codegen`.
// To make any changes, edit the xtask source instead.

/// Re-exports for all items of the latest Minecraft version.
#[cfg(feature = "latest")]
pub mod latest {
    pub use super::mc1_21::*;
}

/// Accompanying types for block entities in Minecraft 1.14.
#[cfg(feature = "1.14")]
pub mod mc1_14 {
    block_entities! {
        "1.14", mc1_14;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["target_uuid"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["attachement_type", "final_state", "target_pool"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["Owner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.14";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity, with extras as fastnbt::Value { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsedSize" as recipes_used_size: i16 }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "target_uuid" as target_uuid: super::compounds::NbtUtils_createUUIDTag }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "attachement_type" as attachement_type: CowStr, "final_state" as final_state: CowStr, "target_pool" as target_pool: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, "Text1" as text1: CowStr, "Text2" as text2: CowStr, "Text3" as text3: CowStr, "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "Owner" as owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { optional "Delay" as delay: i16, optional "MaxNearbyEntities" as max_nearby_entities: i16, optional "MaxSpawnDelay" as max_spawn_delay: i16, optional "MinSpawnDelay" as min_spawn_delay: i16, optional "RequiredPlayerRange" as required_player_range: i16, optional "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: HashMap<CowStr, fastnbt::Value>, optional "SpawnPotentials" as spawn_potentials: Vec<super::compounds::SpawnData_save>, optional "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.14";
        Compound3 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_createUUIDTag { "L" as l: i64, "M" as m: i64 }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: CowStr, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound3>> }
        SpawnData_save { "Entity" as entity: HashMap<CowStr, fastnbt::Value>, "Weight" as weight: i32 }
    }
}

/// Accompanying types for block entities in Minecraft 1.15.
#[cfg(feature = "1.15")]
pub mod mc1_15 {
    block_entities! {
        "1.15", mc1_15;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["target_uuid"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["attachement_type", "final_state", "target_pool"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["Owner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.15";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity, with extras as fastnbt::Value { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsedSize" as recipes_used_size: i16 }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound7>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "target_uuid" as target_uuid: super::compounds::NbtUtils_createUUIDTag }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "attachement_type" as attachement_type: CowStr, "final_state" as final_state: CowStr, "target_pool" as target_pool: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, "Text1" as text1: CowStr, "Text2" as text2: CowStr, "Text3" as text3: CowStr, "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "Owner" as owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { optional "Delay" as delay: i16, optional "MaxNearbyEntities" as max_nearby_entities: i16, optional "MaxSpawnDelay" as max_spawn_delay: i16, optional "MinSpawnDelay" as min_spawn_delay: i16, optional "RequiredPlayerRange" as required_player_range: i16, optional "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: HashMap<CowStr, fastnbt::Value>, optional "SpawnPotentials" as spawn_potentials: Vec<super::compounds::SpawnData_save>, optional "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.15";
        Compound3 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound7 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_createUUIDTag { "L" as l: i64, "M" as m: i64 }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: CowStr, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound3>> }
        SpawnData_save { "Entity" as entity: HashMap<CowStr, fastnbt::Value>, "Weight" as weight: i32 }
    }
}

/// Accompanying types for block entities in Minecraft 1.15.2.
#[cfg(feature = "1.15.2")]
pub mod mc1_15_2 {
    block_entities! {
        "1.15.2", mc1_15_2;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["target_uuid"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["attachement_type", "final_state", "target_pool"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["Owner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsedSize", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.15.2";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity, with extras as fastnbt::Value { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsedSize" as recipes_used_size: i16 }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound7>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "target_uuid" as target_uuid: super::compounds::NbtUtils_createUUIDTag }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "attachement_type" as attachement_type: CowStr, "final_state" as final_state: CowStr, "target_pool" as target_pool: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, "Text1" as text1: CowStr, "Text2" as text2: CowStr, "Text3" as text3: CowStr, "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "Owner" as owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { optional "Delay" as delay: i16, optional "MaxNearbyEntities" as max_nearby_entities: i16, optional "MaxSpawnDelay" as max_spawn_delay: i16, optional "MinSpawnDelay" as min_spawn_delay: i16, optional "RequiredPlayerRange" as required_player_range: i16, optional "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: HashMap<CowStr, fastnbt::Value>, optional "SpawnPotentials" as spawn_potentials: Vec<super::compounds::SpawnData_save>, optional "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.15.2";
        Compound3 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound7 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_createUUIDTag { "L" as l: i64, "M" as m: i64 }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: CowStr, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound3>> }
        SpawnData_save { "Entity" as entity: HashMap<CowStr, fastnbt::Value>, "Weight" as weight: i32 }
    }
}

/// Accompanying types for block entities in Minecraft 1.16.
#[cfg(feature = "1.16")]
pub mod mc1_16 {
    block_entities! {
        "1.16", mc1_16;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.16";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound6>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, "Text1" as text1: CowStr, "Text2" as text2: CowStr, "Text3" as text3: CowStr, "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { optional "Delay" as delay: i16, optional "MaxNearbyEntities" as max_nearby_entities: i16, optional "MaxSpawnDelay" as max_spawn_delay: i16, optional "MinSpawnDelay" as min_spawn_delay: i16, optional "RequiredPlayerRange" as required_player_range: i16, optional "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: HashMap<CowStr, fastnbt::Value>, optional "SpawnPotentials" as spawn_potentials: Vec<super::compounds::SpawnData_save>, optional "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.16";
        Compound3 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound6 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound3>> }
        SpawnData_save { "Entity" as entity: HashMap<CowStr, fastnbt::Value>, "Weight" as weight: i32 }
    }
}

/// Accompanying types for block entities in Minecraft 1.16.2.
#[cfg(feature = "1.16.2")]
pub mod mc1_16_2 {
    block_entities! {
        "1.16.2", mc1_16_2;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.16.2";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound6>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, "Text1" as text1: CowStr, "Text2" as text2: CowStr, "Text3" as text3: CowStr, "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { optional "Delay" as delay: i16, optional "MaxNearbyEntities" as max_nearby_entities: i16, optional "MaxSpawnDelay" as max_spawn_delay: i16, optional "MinSpawnDelay" as min_spawn_delay: i16, optional "RequiredPlayerRange" as required_player_range: i16, optional "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: HashMap<CowStr, fastnbt::Value>, optional "SpawnPotentials" as spawn_potentials: Vec<super::compounds::SpawnData_save>, optional "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.16.2";
        Compound3 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound6 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound3>> }
        SpawnData_save { "Entity" as entity: HashMap<CowStr, fastnbt::Value>, "Weight" as weight: i32 }
    }
}

/// Accompanying types for block entities in Minecraft 1.17.
#[cfg(feature = "1.17")]
pub mod mc1_17 {
    block_entities! {
        "1.17", mc1_17;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.17";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound6>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, optional "FilteredText1" as filtered_text1: CowStr, optional "FilteredText2" as filtered_text2: CowStr, optional "FilteredText3" as filtered_text3: CowStr, optional "FilteredText4" as filtered_text4: CowStr, "GlowingText" as glowing_text: bool, optional "Text1" as text1: CowStr, optional "Text2" as text2: CowStr, optional "Text3" as text3: CowStr, optional "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { optional "Delay" as delay: i16, optional "MaxNearbyEntities" as max_nearby_entities: i16, optional "MaxSpawnDelay" as max_spawn_delay: i16, optional "MinSpawnDelay" as min_spawn_delay: i16, optional "RequiredPlayerRange" as required_player_range: i16, optional "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: HashMap<CowStr, fastnbt::Value>, optional "SpawnPotentials" as spawn_potentials: Vec<super::compounds::SpawnData_save>, optional "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.17";
        Compound3 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound6 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound3>> }
        SpawnData_save { "Entity" as entity: HashMap<CowStr, fastnbt::Value>, "Weight" as weight: i32 }
    }
}

/// Accompanying types for block entities in Minecraft 1.18.
#[cfg(feature = "1.18")]
pub mod mc1_18 {
    block_entities! {
        "1.18", mc1_18;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.18";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, optional "FilteredText1" as filtered_text1: CowStr, optional "FilteredText2" as filtered_text2: CowStr, optional "FilteredText3" as filtered_text3: CowStr, optional "FilteredText4" as filtered_text4: CowStr, "GlowingText" as glowing_text: bool, optional "Text1" as text1: CowStr, optional "Text2" as text2: CowStr, optional "Text3" as text3: CowStr, optional "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.18";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.19.
#[cfg(feature = "1.19")]
pub mod mc1_19 {
    block_entities! {
        "1.19", mc1_19;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.19";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: super::compounds::ItemStack_save_1 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, optional "FilteredText1" as filtered_text1: CowStr, optional "FilteredText2" as filtered_text2: CowStr, optional "FilteredText3" as filtered_text3: CowStr, optional "FilteredText4" as filtered_text4: CowStr, "GlowingText" as glowing_text: bool, optional "Text1" as text1: CowStr, optional "Text2" as text2: CowStr, optional "Text3" as text3: CowStr, optional "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.19";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.19.1.
#[cfg(feature = "1.19.1")]
pub mod mc1_19_1 {
    block_entities! {
        "1.19.1", mc1_19_1;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.19.1";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: super::compounds::ItemStack_save_1, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, optional "FilteredText1" as filtered_text1: CowStr, optional "FilteredText2" as filtered_text2: CowStr, optional "FilteredText3" as filtered_text3: CowStr, optional "FilteredText4" as filtered_text4: CowStr, "GlowingText" as glowing_text: bool, optional "Text1" as text1: CowStr, optional "Text2" as text2: CowStr, optional "Text3" as text3: CowStr, optional "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.19.1";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.19.3.
#[cfg(feature = "1.19.3")]
pub mod mc1_19_3 {
    block_entities! {
        "1.19.3", mc1_19_3;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner", "note_block_sound"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.19.3";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: super::compounds::ItemStack_save_1, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, optional "FilteredText1" as filtered_text1: CowStr, optional "FilteredText2" as filtered_text2: CowStr, optional "FilteredText3" as filtered_text3: CowStr, optional "FilteredText4" as filtered_text4: CowStr, "GlowingText" as glowing_text: bool, optional "Text1" as text1: CowStr, optional "Text2" as text2: CowStr, optional "Text3" as text3: CowStr, optional "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile, optional "note_block_sound" as note_block_sound: CowStr }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.19.3";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.19.4.
#[cfg(feature = "1.19.4")]
pub mod mc1_19_4 {
    block_entities! {
        "1.19.4", mc1_19_4;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:decorated_pot", DecoratedPot: DecoratedPotBlockEntity (> BlockEntity), ["shards"];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["Color", "FilteredText1", "FilteredText2", "FilteredText3", "FilteredText4", "GlowingText", "Text1", "Text2", "Text3", "Text4"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner", "note_block_sound"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:suspicious_sand", SuspiciousSand: SuspiciousSandBlockEntity (> BlockEntity), ["item", "loot_table", "loot_table_seed"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.19.4";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DecoratedPotBlockEntity > BlockEntity { "shards" as shards: Vec<CowStr> }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: super::compounds::ItemStack_save_1, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { "Color" as color: CowStr, optional "FilteredText1" as filtered_text1: CowStr, optional "FilteredText2" as filtered_text2: CowStr, optional "FilteredText3" as filtered_text3: CowStr, optional "FilteredText4" as filtered_text4: CowStr, "GlowingText" as glowing_text: bool, optional "Text1" as text1: CowStr, optional "Text2" as text2: CowStr, optional "Text3" as text3: CowStr, optional "Text4" as text4: CowStr }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile, optional "note_block_sound" as note_block_sound: CowStr }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        SuspiciousSandBlockEntity > BlockEntity { optional "item" as item: super::compounds::ItemStack_save_1, optional "loot_table" as loot_table: CowStr, optional "loot_table_seed" as loot_table_seed: i64 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.19.4";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.20.
#[cfg(feature = "1.20")]
pub mod mc1_20 {
    block_entities! {
        "1.20", mc1_20;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "Primary", "Secondary"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:brushable_block", BrushableBlock: BrushableBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item"];
        "minecraft:calibrated_sculk_sensor", CalibratedSculkSensor: CalibratedSculkSensorBlockEntity (> > BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:decorated_pot", DecoratedPot: DecoratedPotBlockEntity (> BlockEntity), ["sherds"];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner", "note_block_sound"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.20";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, "Primary" as primary: i32, "Secondary" as secondary: i32 }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        BrushableBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: super::compounds::ItemStack_save_1 }
        CalibratedSculkSensorBlockEntity > SculkSensorBlockEntity {  }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DecoratedPotBlockEntity > BlockEntity { "sherds" as sherds: Vec<fastnbt::Value> }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: super::compounds::ItemStack_save_1, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { optional "back_text" as back_text: fastnbt::Value, optional "front_text" as front_text: fastnbt::Value, "is_waxed" as is_waxed: bool }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile, optional "note_block_sound" as note_block_sound: CowStr }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.20";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.20.2.
#[cfg(feature = "1.20.2")]
pub mod mc1_20_2 {
    block_entities! {
        "1.20.2", mc1_20_2;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "primary_effect", "secondary_effect"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:brushable_block", BrushableBlock: BrushableBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item"];
        "minecraft:calibrated_sculk_sensor", CalibratedSculkSensor: CalibratedSculkSensorBlockEntity (> > BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:decorated_pot", DecoratedPot: DecoratedPotBlockEntity (> BlockEntity), ["sherds"];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "pool", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner", "note_block_sound"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
    }

    block_entity_types! {
        "1.20.2";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, optional "primary_effect" as primary_effect: CowStr, optional "secondary_effect" as secondary_effect: CowStr }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        BrushableBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: super::compounds::ItemStack_save_1 }
        CalibratedSculkSensorBlockEntity > SculkSensorBlockEntity {  }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DecoratedPotBlockEntity > BlockEntity { optional "sherds" as sherds: Vec<fastnbt::Value> }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "pool" as pool: CowStr, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: super::compounds::ItemStack_save_1, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { optional "back_text" as back_text: fastnbt::Value, optional "front_text" as front_text: fastnbt::Value, "is_waxed" as is_waxed: bool }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile, optional "note_block_sound" as note_block_sound: CowStr }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
    }

    block_entity_compound_types! {
        "1.20.2";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.20.3.
#[cfg(feature = "1.20.3")]
pub mod mc1_20_3 {
    block_entities! {
        "1.20.3", mc1_20_3;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "Patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "primary_effect", "secondary_effect"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["Bees", "FlowerPos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:brushable_block", BrushableBlock: BrushableBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item"];
        "minecraft:calibrated_sculk_sensor", CalibratedSculkSensor: CalibratedSculkSensorBlockEntity (> > BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:crafter", Crafter: CrafterBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "crafting_ticks_remaining", "disabled_slots", "triggered", "CustomName", "Lock"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:decorated_pot", DecoratedPot: DecoratedPotBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item", "sherds"];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantmentTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "ExitPortal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "placement_priority", "pool", "selection_priority", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["SkullOwner", "note_block_sound"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:trial_spawner", TrialSpawner: TrialSpawnerBlockEntity (> BlockEntity), [];
    }

    block_entity_types! {
        "1.20.3";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<super::compounds::ItemStack_save>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Patterns" as patterns: Vec<fastnbt::Value> }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, optional "primary_effect" as primary_effect: CowStr, optional "secondary_effect" as secondary_effect: CowStr }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "Bees" as bees: Vec<super::compounds::Compound5>, optional "FlowerPos" as flower_pos: super::compounds::NbtUtils_writeBlockPos }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        BrushableBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: super::compounds::ItemStack_save_1 }
        CalibratedSculkSensorBlockEntity > SculkSensorBlockEntity {  }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<super::compounds::ItemStack_save> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        CrafterBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "crafting_ticks_remaining" as crafting_ticks_remaining: i32, "disabled_slots" as disabled_slots: fastnbt::IntArray, "triggered" as triggered: i32 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DecoratedPotBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: super::compounds::ItemStack_save_1, optional "sherds" as sherds: Vec<fastnbt::Value> }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantmentTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "placement_priority" as placement_priority: i32, "pool" as pool: CowStr, "selection_priority" as selection_priority: i32, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: super::compounds::ItemStack_save_1, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: super::compounds::ItemStack_save_1, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<super::compounds::ItemStack_save>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { optional "back_text" as back_text: fastnbt::Value, optional "front_text" as front_text: fastnbt::Value, "is_waxed" as is_waxed: bool }
        SkullBlockEntity > BlockEntity { optional "SkullOwner" as skull_owner: super::compounds::NbtUtils_writeGameProfile, optional "note_block_sound" as note_block_sound: CowStr }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "ExitPortal" as exit_portal: super::compounds::NbtUtils_writeBlockPos }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
        TrialSpawnerBlockEntity > BlockEntity {  }
    }

    block_entity_compound_types! {
        "1.20.3";
        Compound2 { optional "Signature" as signature: CowStr, "Value" as value: CowStr }
        Compound5 { "EntityData" as entity_data: HashMap<CowStr, fastnbt::Value>, "MinOccupationTicks" as min_occupation_ticks: i32, "TicksInHive" as ticks_in_hive: i32 }
        ItemStack_save { "Count" as count: i8, "Slot" as slot: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        ItemStack_save_1 { "Count" as count: i8, "id" as id: CowStr, optional "tag" as tag: HashMap<CowStr, fastnbt::Value> }
        NbtUtils_writeBlockPos { "X" as x: i32, "Y" as y: i32, "Z" as z: i32 }
        NbtUtils_writeGameProfile { optional "Id" as id: u128, optional "Name" as name: CowStr, optional "Properties" as properties: HashMap<CowStr, Vec<super::compounds::Compound2>> }
    }
}

/// Accompanying types for block entities in Minecraft 1.20.5.
#[cfg(feature = "1.20.5")]
pub mod mc1_20_5 {
    block_entities! {
        "1.20.5", mc1_20_5;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "primary_effect", "secondary_effect"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["bees", "flower_pos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:brushable_block", BrushableBlock: BrushableBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item"];
        "minecraft:calibrated_sculk_sensor", CalibratedSculkSensor: CalibratedSculkSensorBlockEntity (> > BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:crafter", Crafter: CrafterBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "crafting_ticks_remaining", "disabled_slots", "triggered", "CustomName", "Lock"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:decorated_pot", DecoratedPot: DecoratedPotBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item", "sherds"];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantingTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "exit_portal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "placement_priority", "pool", "selection_priority", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["IsPlaying", "RecordItem", "RecordStartTick", "TickCount"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["custom_name", "note_block_sound", "profile"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:trial_spawner", TrialSpawner: TrialSpawnerBlockEntity (> BlockEntity), [];
        "minecraft:vault", Vault: VaultBlockEntity (> BlockEntity), ["config", "server_data", "shared_data"];
    }

    block_entity_types! {
        "1.20.5";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<fastnbt::Value>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "patterns" as patterns: fastnbt::Value }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, optional "primary_effect" as primary_effect: CowStr, optional "secondary_effect" as secondary_effect: CowStr }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "bees" as bees: fastnbt::Value, optional "flower_pos" as flower_pos: fastnbt::IntArray }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<fastnbt::Value> }
        BrushableBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: fastnbt::Value }
        CalibratedSculkSensorBlockEntity > SculkSensorBlockEntity {  }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<fastnbt::Value> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<fastnbt::Value>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, optional "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        CrafterBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "crafting_ticks_remaining" as crafting_ticks_remaining: i32, "disabled_slots" as disabled_slots: fastnbt::IntArray, "triggered" as triggered: i32 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DecoratedPotBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: fastnbt::Value, optional "sherds" as sherds: fastnbt::Value }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantingTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "placement_priority" as placement_priority: i32, "pool" as pool: CowStr, "selection_priority" as selection_priority: i32, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { "IsPlaying" as is_playing: bool, optional "RecordItem" as record_item: fastnbt::Value, "RecordStartTick" as record_start_tick: i64, "TickCount" as tick_count: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: fastnbt::Value, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { optional "back_text" as back_text: fastnbt::Value, optional "front_text" as front_text: fastnbt::Value, "is_waxed" as is_waxed: bool }
        SkullBlockEntity > BlockEntity { optional "custom_name" as custom_name: CowStr, optional "note_block_sound" as note_block_sound: CowStr, optional "profile" as profile: fastnbt::Value }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "exit_portal" as exit_portal: fastnbt::IntArray }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
        TrialSpawnerBlockEntity > BlockEntity {  }
        VaultBlockEntity > BlockEntity { "config" as config: fastnbt::Value, "server_data" as server_data: fastnbt::Value, "shared_data" as shared_data: fastnbt::Value }
    }

    block_entity_compound_types! {
        "1.20.5";
    }
}

/// Accompanying types for block entities in Minecraft 1.21.
#[cfg(feature = "1.21")]
pub mod mc1_21 {
    block_entities! {
        "1.21", mc1_21;
        "minecraft:banner", Banner: BannerBlockEntity (> BlockEntity), ["CustomName", "patterns"];
        "minecraft:barrel", Barrel: BarrelBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:beacon", Beacon: BeaconBlockEntity (> BlockEntity), ["CustomName", "Levels", "Lock", "primary_effect", "secondary_effect"];
        "minecraft:bed", Bed: BedBlockEntity (> BlockEntity), [];
        "minecraft:beehive", Beehive: BeehiveBlockEntity (> BlockEntity), ["bees", "flower_pos"];
        "minecraft:bell", Bell: BellBlockEntity (> BlockEntity), [];
        "minecraft:blast_furnace", BlastFurnace: BlastFurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:brewing_stand", BrewingStand: BrewingStandBlockEntity (> > BlockEntity), ["BrewTime", "Fuel", "Items", "CustomName", "Lock"];
        "minecraft:brushable_block", BrushableBlock: BrushableBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item"];
        "minecraft:calibrated_sculk_sensor", CalibratedSculkSensor: CalibratedSculkSensorBlockEntity (> > BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:campfire", Campfire: CampfireBlockEntity (> BlockEntity), ["CookingTimes", "CookingTotalTimes", "Items"];
        "minecraft:chest", Chest: ChestBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:chiseled_bookshelf", ChiseledBookshelf: ChiseledBookShelfBlockEntity (> BlockEntity), ["Items", "last_interacted_slot"];
        "minecraft:command_block", CommandBlock: CommandBlockEntity (> BlockEntity), ["Command", "CustomName", "LastExecution", "LastOutput", "SuccessCount", "TrackOutput", "UpdateLastExecution", "auto", "conditionMet", "powered"];
        "minecraft:comparator", Comparator: ComparatorBlockEntity (> BlockEntity), ["OutputSignal"];
        "minecraft:conduit", Conduit: ConduitBlockEntity (> BlockEntity), ["Target"];
        "minecraft:crafter", Crafter: CrafterBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "crafting_ticks_remaining", "disabled_slots", "triggered", "CustomName", "Lock"];
        "minecraft:daylight_detector", DaylightDetector: DaylightDetectorBlockEntity (> BlockEntity), [];
        "minecraft:decorated_pot", DecoratedPot: DecoratedPotBlockEntity (> BlockEntity), ["LootTable", "LootTableSeed", "item", "sherds"];
        "minecraft:dispenser", Dispenser: DispenserBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:dropper", Dropper: DropperBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:enchanting_table", EnchantingTable: EnchantingTableBlockEntity (> BlockEntity), ["CustomName"];
        "minecraft:end_gateway", EndGateway: TheEndGatewayBlockEntity (> > BlockEntity), ["Age", "ExactTeleport", "exit_portal"];
        "minecraft:end_portal", EndPortal: TheEndPortalBlockEntity (> BlockEntity), [];
        "minecraft:ender_chest", EnderChest: EnderChestBlockEntity (> BlockEntity), [];
        "minecraft:furnace", Furnace: FurnaceBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:hanging_sign", HangingSign: HangingSignBlockEntity (> > BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:hopper", Hopper: HopperBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "TransferCooldown", "CustomName", "Lock"];
        "minecraft:jigsaw", Jigsaw: JigsawBlockEntity (> BlockEntity), ["final_state", "joint", "name", "placement_priority", "pool", "selection_priority", "target"];
        "minecraft:jukebox", Jukebox: JukeboxBlockEntity (> BlockEntity), ["RecordItem", "ticks_since_song_started"];
        "minecraft:lectern", Lectern: LecternBlockEntity (> BlockEntity), ["Book", "Page"];
        "minecraft:mob_spawner", MobSpawner: SpawnerBlockEntity (> BlockEntity), ["Delay", "MaxNearbyEntities", "MaxSpawnDelay", "MinSpawnDelay", "RequiredPlayerRange", "SpawnCount", "SpawnData", "SpawnPotentials", "SpawnRange"];
        "minecraft:piston", Piston: PistonMovingBlockEntity (> BlockEntity), ["blockState", "extending", "facing", "progress", "source"];
        "minecraft:sculk_catalyst", SculkCatalyst: SculkCatalystBlockEntity (> BlockEntity), ["cursors"];
        "minecraft:sculk_sensor", SculkSensor: SculkSensorBlockEntity (> BlockEntity), ["last_vibration_frequency", "listener"];
        "minecraft:sculk_shrieker", SculkShrieker: SculkShriekerBlockEntity (> BlockEntity), ["listener", "warning_level"];
        "minecraft:shulker_box", ShulkerBox: ShulkerBoxBlockEntity (> > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:sign", Sign: SignBlockEntity (> BlockEntity), ["back_text", "front_text", "is_waxed"];
        "minecraft:skull", Skull: SkullBlockEntity (> BlockEntity), ["custom_name", "note_block_sound", "profile"];
        "minecraft:smoker", Smoker: SmokerBlockEntity (> > > BlockEntity), ["BurnTime", "CookTime", "CookTimeTotal", "Items", "RecipesUsed", "CustomName", "Lock"];
        "minecraft:structure_block", StructureBlock: StructureBlockEntity (> BlockEntity), ["author", "ignoreEntities", "integrity", "metadata", "mirror", "mode", "name", "posX", "posY", "posZ", "powered", "rotation", "seed", "showair", "showboundingbox", "sizeX", "sizeY", "sizeZ"];
        "minecraft:trapped_chest", TrappedChest: TrappedChestBlockEntity (> > > > BlockEntity), ["Items", "LootTable", "LootTableSeed", "CustomName", "Lock"];
        "minecraft:trial_spawner", TrialSpawner: TrialSpawnerBlockEntity (> BlockEntity), [];
        "minecraft:vault", Vault: VaultBlockEntity (> BlockEntity), ["config", "server_data", "shared_data"];
    }

    block_entity_types! {
        "1.21";
        AbstractFurnaceBlockEntity > BaseContainerBlockEntity { "BurnTime" as burn_time: i16, "CookTime" as cook_time: i16, "CookTimeTotal" as cook_time_total: i16, optional "Items" as items: Vec<fastnbt::Value>, "RecipesUsed" as recipes_used: HashMap<CowStr, i32> }
        BannerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "patterns" as patterns: fastnbt::Value }
        BarrelBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        BaseContainerBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, optional "Lock" as lock: CowStr }
        BeaconBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr, "Levels" as levels: i32, optional "Lock" as lock: CowStr, optional "primary_effect" as primary_effect: CowStr, optional "secondary_effect" as secondary_effect: CowStr }
        BedBlockEntity > BlockEntity {  }
        BeehiveBlockEntity > BlockEntity { "bees" as bees: fastnbt::Value, optional "flower_pos" as flower_pos: fastnbt::IntArray }
        BellBlockEntity > BlockEntity {  }
        BlastFurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        BlockEntity { "x" as x: i32, "y" as y: i32, "z" as z: i32 }
        BrewingStandBlockEntity > BaseContainerBlockEntity { "BrewTime" as brew_time: i16, "Fuel" as fuel: i8, optional "Items" as items: Vec<fastnbt::Value> }
        BrushableBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: fastnbt::Value }
        CalibratedSculkSensorBlockEntity > SculkSensorBlockEntity {  }
        CampfireBlockEntity > BlockEntity { "CookingTimes" as cooking_times: fastnbt::IntArray, "CookingTotalTimes" as cooking_total_times: fastnbt::IntArray, optional "Items" as items: Vec<fastnbt::Value> }
        ChestBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        ChiseledBookShelfBlockEntity > BlockEntity { optional "Items" as items: Vec<fastnbt::Value>, "last_interacted_slot" as last_interacted_slot: i32 }
        CommandBlockEntity > BlockEntity { "Command" as command: CowStr, optional "CustomName" as custom_name: CowStr, optional "LastExecution" as last_execution: i64, optional "LastOutput" as last_output: CowStr, "SuccessCount" as success_count: i32, "TrackOutput" as track_output: bool, "UpdateLastExecution" as update_last_execution: bool, "auto" as auto: bool, "conditionMet" as condition_met: bool, "powered" as powered: bool }
        ComparatorBlockEntity > BlockEntity { "OutputSignal" as output_signal: i32 }
        ConduitBlockEntity > BlockEntity { optional "Target" as target: u128 }
        CrafterBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "crafting_ticks_remaining" as crafting_ticks_remaining: i32, "disabled_slots" as disabled_slots: fastnbt::IntArray, "triggered" as triggered: i32 }
        DaylightDetectorBlockEntity > BlockEntity {  }
        DecoratedPotBlockEntity > BlockEntity { optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, optional "item" as item: fastnbt::Value, optional "sherds" as sherds: fastnbt::Value }
        DispenserBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        DropperBlockEntity > DispenserBlockEntity {  }
        EnchantingTableBlockEntity > BlockEntity { optional "CustomName" as custom_name: CowStr }
        EnderChestBlockEntity > BlockEntity {  }
        FurnaceBlockEntity > AbstractFurnaceBlockEntity {  }
        HangingSignBlockEntity > SignBlockEntity {  }
        HopperBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64, "TransferCooldown" as transfer_cooldown: i32 }
        JigsawBlockEntity > BlockEntity { "final_state" as final_state: CowStr, "joint" as joint: CowStr, "name" as name: CowStr, "placement_priority" as placement_priority: i32, "pool" as pool: CowStr, "selection_priority" as selection_priority: i32, "target" as target: CowStr }
        JukeboxBlockEntity > BlockEntity { optional "RecordItem" as record_item: fastnbt::Value, optional "ticks_since_song_started" as ticks_since_song_started: i64 }
        LecternBlockEntity > BlockEntity { optional "Book" as book: fastnbt::Value, optional "Page" as page: i32 }
        PistonMovingBlockEntity > BlockEntity { "blockState" as block_state: super::BlockState, "extending" as extending: bool, "facing" as facing: i32, "progress" as progress: f32, "source" as source: bool }
        RandomizableContainerBlockEntity > BaseContainerBlockEntity {  }
        SculkCatalystBlockEntity > BlockEntity { optional "cursors" as cursors: fastnbt::Value }
        SculkSensorBlockEntity > BlockEntity { "last_vibration_frequency" as last_vibration_frequency: i32, optional "listener" as listener: fastnbt::Value }
        SculkShriekerBlockEntity > BlockEntity { optional "listener" as listener: fastnbt::Value, "warning_level" as warning_level: i32 }
        ShulkerBoxBlockEntity > RandomizableContainerBlockEntity { optional "Items" as items: Vec<fastnbt::Value>, optional "LootTable" as loot_table: CowStr, optional "LootTableSeed" as loot_table_seed: i64 }
        SignBlockEntity > BlockEntity { optional "back_text" as back_text: fastnbt::Value, optional "front_text" as front_text: fastnbt::Value, "is_waxed" as is_waxed: bool }
        SkullBlockEntity > BlockEntity { optional "custom_name" as custom_name: CowStr, optional "note_block_sound" as note_block_sound: CowStr, optional "profile" as profile: fastnbt::Value }
        SmokerBlockEntity > AbstractFurnaceBlockEntity {  }
        SpawnerBlockEntity > BlockEntity { "Delay" as delay: i16, "MaxNearbyEntities" as max_nearby_entities: i16, "MaxSpawnDelay" as max_spawn_delay: i16, "MinSpawnDelay" as min_spawn_delay: i16, "RequiredPlayerRange" as required_player_range: i16, "SpawnCount" as spawn_count: i16, optional "SpawnData" as spawn_data: fastnbt::Value, "SpawnPotentials" as spawn_potentials: fastnbt::Value, "SpawnRange" as spawn_range: i16 }
        StructureBlockEntity > BlockEntity { "author" as author: CowStr, "ignoreEntities" as ignore_entities: bool, "integrity" as integrity: f32, "metadata" as metadata: CowStr, "mirror" as mirror: CowStr, "mode" as mode: CowStr, "name" as name: CowStr, "posX" as pos_x: i32, "posY" as pos_y: i32, "posZ" as pos_z: i32, "powered" as powered: bool, "rotation" as rotation: CowStr, "seed" as seed: i64, "showair" as showair: bool, "showboundingbox" as showboundingbox: bool, "sizeX" as size_x: i32, "sizeY" as size_y: i32, "sizeZ" as size_z: i32 }
        TheEndGatewayBlockEntity > TheEndPortalBlockEntity { "Age" as age: i64, optional "ExactTeleport" as exact_teleport: bool, optional "exit_portal" as exit_portal: fastnbt::IntArray }
        TheEndPortalBlockEntity > BlockEntity {  }
        TrappedChestBlockEntity > ChestBlockEntity {  }
        TrialSpawnerBlockEntity > BlockEntity {  }
        VaultBlockEntity > BlockEntity { "config" as config: fastnbt::Value, "server_data" as server_data: fastnbt::Value, "shared_data" as shared_data: fastnbt::Value }
    }

    block_entity_compound_types! {
        "1.21";
    }
}
